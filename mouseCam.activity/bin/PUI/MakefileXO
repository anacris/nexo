#@author Sebastián Marichal
# 		   sebastian_marichal@hotmail.com
# 		   sebarocker@gmail.com
#
# Universidad de la República, Montevideo , Uruguay
#
INC_DIR= ../../ARToolkit/include
LIB_DIR= ../../ARToolkit/lib/
BIN_DIR= ../bin

LDFLAG=-pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0 -L/usr/X11R6/lib -L/usr/local/lib -L$(LIB_DIR)
LIBS= -lARgsub -lARvideo -lARMulti -lAR -lpthread -lglut -lGLU -lGL -lXi -lX11 -lm -lcv -lcvaux -lhighgui -lSDL -lSDL_mixer -lSDL_gfx

#Para optimizacion agresiva. Cuidado, pueden variar los resultados por la perdida de precision
CFLAG_RELEASE_AGGRESIVE = -pipe -O2 -ffast-math -funroll-all-loops -march=native -mtune=native -msse -msse2 -msse3 -mmmx -m3dnow -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/X11R6/include -I/usr/include/opencv -I$(INC_DIR)

#CFLAG_RELEASE incluye todas las banderas de optimizacion menos -funroll-all-loops
#CFLAG_RELEASE = -fPIC -pipe -O2 -march=native -mtune=native -msse -msse2 -msse3 -mmmx -m3dnow -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/X11R6/include -I/usr/include/opencv -I$(INC_DIR)
CFLAG_RELEASE = -fPIC -pipe -O2 -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/X11R6/include -I/usr/include/opencv -I$(INC_DIR)

#Banderas para debug, no optimizan (compilacion mas rapida) y generan simbolos de debug
CFLAG_DEBUG = -pipe -g -O0 -fPIC -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/X11R6/include -I/usr/include/opencv -I$(INC_DIR)

CFLAG = $(CFLAG_RELEASE)

OBJS =
HEADDERS =

all: Pui.o TimeUtils.o OpenCVCamera.o Funciones.o UtilidadesSDL.o cvUtilities.o Utilidades.o ProcesamientoImagenRangosCV ProcesamientoImagenRangosMemoria ProcesamientoImagenRangosMemoriaEstatica findCirclesTestParaCalibracion histogramasEnROI

Pui.o: Pui.cpp cvUtilities.o Funciones.o
	g++ -c $(CFLAG) -DGLUT_HABILITADO=-1 Pui.cpp
	
TimeUtils.o: TimeUtils.cpp
	g++ -c $(CFLAG) TimeUtils.cpp

OpenCVCamera.o: OpenCVCamera.h OpenCVCamera.cpp
	g++ -c $(CFLAG) OpenCVCamera.cpp

Funciones.o: Funciones.cpp 
	g++ -c $(CFLAG) Funciones.cpp

Utilidades.o: Utilidades.c cvUtilities.o Funciones.o
	g++ -c $(CFLAG) Utilidades.c
	
cvUtilities.o: cvUtilities.cpp cvUtilities.h UtilidadesSDL.o Funciones.o
	g++ -c $(CFLAG) cvUtilities.cpp
	
UtilidadesSDL.o: UtilidadesSDL.cpp
	g++ -c $(CFLAG) UtilidadesSDL.cpp

ProcesamientoImagenRangosCV.o: ProcesamientoImagenRangosCV.cpp
	g++ -c $(CFLAG) ProcesamientoImagenRangosCV.cpp

ProcesamientoImagenRangosCV: ProcesamientoImagenRangosCV.o
	g++ -o $(BIN_DIR)/ProcesamientoImagenRangosCV ProcesamientoImagenRangosCV.o  $(OBJS) $(LDFLAG) $(LIBS)

ProcesamientoImagenRangosMemoria.o: ProcesamientoImagenRangosMemoria.cpp
	g++ -c $(CFLAG) ProcesamientoImagenRangosMemoria.cpp

ProcesamientoImagenRangosMemoria: ProcesamientoImagenRangosMemoria.o
	g++ -o $(BIN_DIR)/ProcesamientoImagenRangosMemoria cvUtilities.o Utilidades.o UtilidadesSDL.o Funciones.o ProcesamientoImagenRangosMemoria.o  $(OBJS) $(LDFLAG) $(LIBS)

ProcesamientoImagenRangosMemoriaEstatica.o: ProcesamientoImagenRangosMemoriaEstatica.cpp
	g++ -c $(CFLAG) ProcesamientoImagenRangosMemoriaEstatica.cpp

ProcesamientoImagenRangosMemoriaEstatica: ProcesamientoImagenRangosMemoriaEstatica.o
	g++ -o $(BIN_DIR)/ProcesamientoImagenRangosMemoriaEstatica cvUtilities.o Utilidades.o UtilidadesSDL.o Funciones.o ProcesamientoImagenRangosMemoriaEstatica.o  $(OBJS) $(LDFLAG) $(LIBS)

findCirclesTestParaCalibracion: findCirclesTestParaCalibracion.o cvUtilities.o
	g++ -o $(BIN_DIR)/findCirclesTestParaCalibracion cvUtilities.o Utilidades.o UtilidadesSDL.o Funciones.o findCirclesTestParaCalibracion.o  $(OBJS) $(LDFLAG) $(LIBS)

findCirclesTestParaCalibracion.o : findCirclesTestParaCalibracion.cpp
	g++ -c $(CFLAG) findCirclesTestParaCalibracion.cpp

histogramasEnROI.o: histogramasEnROI.cpp
	g++ -c $(CFLAG) histogramasEnROI.cpp

histogramasEnROI: histogramasEnROI.o
	g++ -o $(BIN_DIR)/histogramasEnROI histogramasEnROI.o   $(OBJS) $(LDFLAG) $(LIBS)
	
clean:
	rm -f *.o
	
allclean:
	rm -f *.o
