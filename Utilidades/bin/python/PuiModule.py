# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.36
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _PuiModule
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


class ARCoordMarcador(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ARCoordMarcador, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ARCoordMarcador, name)
    __repr__ = _swig_repr
    __swig_setmethods__["area"] = _PuiModule.ARCoordMarcador_area_set
    __swig_getmethods__["area"] = _PuiModule.ARCoordMarcador_area_get
    if _newclass:area = _swig_property(_PuiModule.ARCoordMarcador_area_get, _PuiModule.ARCoordMarcador_area_set)
    __swig_setmethods__["centro"] = _PuiModule.ARCoordMarcador_centro_set
    __swig_getmethods__["centro"] = _PuiModule.ARCoordMarcador_centro_get
    if _newclass:centro = _swig_property(_PuiModule.ARCoordMarcador_centro_get, _PuiModule.ARCoordMarcador_centro_set)
    __swig_setmethods__["vertex"] = _PuiModule.ARCoordMarcador_vertex_set
    __swig_getmethods__["vertex"] = _PuiModule.ARCoordMarcador_vertex_get
    if _newclass:vertex = _swig_property(_PuiModule.ARCoordMarcador_vertex_get, _PuiModule.ARCoordMarcador_vertex_set)
    __swig_setmethods__["visible"] = _PuiModule.ARCoordMarcador_visible_set
    __swig_getmethods__["visible"] = _PuiModule.ARCoordMarcador_visible_get
    if _newclass:visible = _swig_property(_PuiModule.ARCoordMarcador_visible_get, _PuiModule.ARCoordMarcador_visible_set)
    __swig_setmethods__["id"] = _PuiModule.ARCoordMarcador_id_set
    __swig_getmethods__["id"] = _PuiModule.ARCoordMarcador_id_get
    if _newclass:id = _swig_property(_PuiModule.ARCoordMarcador_id_get, _PuiModule.ARCoordMarcador_id_set)
    __swig_setmethods__["cf"] = _PuiModule.ARCoordMarcador_cf_set
    __swig_getmethods__["cf"] = _PuiModule.ARCoordMarcador_cf_get
    if _newclass:cf = _swig_property(_PuiModule.ARCoordMarcador_cf_get, _PuiModule.ARCoordMarcador_cf_set)
    def __init__(self, *args): 
        this = _PuiModule.new_ARCoordMarcador(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_ARCoordMarcador
    __del__ = lambda self : None;
ARCoordMarcador_swigregister = _PuiModule.ARCoordMarcador_swigregister
ARCoordMarcador_swigregister(ARCoordMarcador)

class Elemento(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Elemento, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Elemento, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idPatt"] = _PuiModule.Elemento_idPatt_set
    __swig_getmethods__["idPatt"] = _PuiModule.Elemento_idPatt_get
    if _newclass:idPatt = _swig_property(_PuiModule.Elemento_idPatt_get, _PuiModule.Elemento_idPatt_set)
    __swig_setmethods__["imagen"] = _PuiModule.Elemento_imagen_set
    __swig_getmethods__["imagen"] = _PuiModule.Elemento_imagen_get
    if _newclass:imagen = _swig_property(_PuiModule.Elemento_imagen_get, _PuiModule.Elemento_imagen_set)
    __swig_setmethods__["sonido"] = _PuiModule.Elemento_sonido_set
    __swig_getmethods__["sonido"] = _PuiModule.Elemento_sonido_get
    if _newclass:sonido = _swig_property(_PuiModule.Elemento_sonido_get, _PuiModule.Elemento_sonido_set)
    __swig_setmethods__["nombre"] = _PuiModule.Elemento_nombre_set
    __swig_getmethods__["nombre"] = _PuiModule.Elemento_nombre_get
    if _newclass:nombre = _swig_property(_PuiModule.Elemento_nombre_get, _PuiModule.Elemento_nombre_set)
    __swig_setmethods__["conjunto"] = _PuiModule.Elemento_conjunto_set
    __swig_getmethods__["conjunto"] = _PuiModule.Elemento_conjunto_get
    if _newclass:conjunto = _swig_property(_PuiModule.Elemento_conjunto_get, _PuiModule.Elemento_conjunto_set)
    __swig_setmethods__["idElementoRelacionado"] = _PuiModule.Elemento_idElementoRelacionado_set
    __swig_getmethods__["idElementoRelacionado"] = _PuiModule.Elemento_idElementoRelacionado_get
    if _newclass:idElementoRelacionado = _swig_property(_PuiModule.Elemento_idElementoRelacionado_get, _PuiModule.Elemento_idElementoRelacionado_set)
    __swig_setmethods__["nombreRelacion"] = _PuiModule.Elemento_nombreRelacion_set
    __swig_getmethods__["nombreRelacion"] = _PuiModule.Elemento_nombreRelacion_get
    if _newclass:nombreRelacion = _swig_property(_PuiModule.Elemento_nombreRelacion_get, _PuiModule.Elemento_nombreRelacion_set)
    __swig_setmethods__["idImagenSDL"] = _PuiModule.Elemento_idImagenSDL_set
    __swig_getmethods__["idImagenSDL"] = _PuiModule.Elemento_idImagenSDL_get
    if _newclass:idImagenSDL = _swig_property(_PuiModule.Elemento_idImagenSDL_get, _PuiModule.Elemento_idImagenSDL_set)
    def __init__(self, *args): 
        this = _PuiModule.new_Elemento(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_Elemento
    __del__ = lambda self : None;
Elemento_swigregister = _PuiModule.Elemento_swigregister
Elemento_swigregister(Elemento)

class PUI_Multimodal(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PUI_Multimodal, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PUI_Multimodal, name)
    __repr__ = _swig_repr
    __swig_setmethods__["objetosPUI"] = _PuiModule.PUI_Multimodal_objetosPUI_set
    __swig_getmethods__["objetosPUI"] = _PuiModule.PUI_Multimodal_objetosPUI_get
    if _newclass:objetosPUI = _swig_property(_PuiModule.PUI_Multimodal_objetosPUI_get, _PuiModule.PUI_Multimodal_objetosPUI_set)
    __swig_setmethods__["modo"] = _PuiModule.PUI_Multimodal_modo_set
    __swig_getmethods__["modo"] = _PuiModule.PUI_Multimodal_modo_get
    if _newclass:modo = _swig_property(_PuiModule.PUI_Multimodal_modo_get, _PuiModule.PUI_Multimodal_modo_set)
    __swig_setmethods__["max_elementos"] = _PuiModule.PUI_Multimodal_max_elementos_set
    __swig_getmethods__["max_elementos"] = _PuiModule.PUI_Multimodal_max_elementos_get
    if _newclass:max_elementos = _swig_property(_PuiModule.PUI_Multimodal_max_elementos_get, _PuiModule.PUI_Multimodal_max_elementos_set)
    __swig_setmethods__["cant_elementos_cargados"] = _PuiModule.PUI_Multimodal_cant_elementos_cargados_set
    __swig_getmethods__["cant_elementos_cargados"] = _PuiModule.PUI_Multimodal_cant_elementos_cargados_get
    if _newclass:cant_elementos_cargados = _swig_property(_PuiModule.PUI_Multimodal_cant_elementos_cargados_get, _PuiModule.PUI_Multimodal_cant_elementos_cargados_set)
    __swig_setmethods__["soundOK"] = _PuiModule.PUI_Multimodal_soundOK_set
    __swig_getmethods__["soundOK"] = _PuiModule.PUI_Multimodal_soundOK_get
    if _newclass:soundOK = _swig_property(_PuiModule.PUI_Multimodal_soundOK_get, _PuiModule.PUI_Multimodal_soundOK_set)
    __swig_setmethods__["soundError"] = _PuiModule.PUI_Multimodal_soundError_set
    __swig_getmethods__["soundError"] = _PuiModule.PUI_Multimodal_soundError_get
    if _newclass:soundError = _swig_property(_PuiModule.PUI_Multimodal_soundError_get, _PuiModule.PUI_Multimodal_soundError_set)
    __swig_setmethods__["idSimpleMarcadorDetectado"] = _PuiModule.PUI_Multimodal_idSimpleMarcadorDetectado_set
    __swig_getmethods__["idSimpleMarcadorDetectado"] = _PuiModule.PUI_Multimodal_idSimpleMarcadorDetectado_get
    if _newclass:idSimpleMarcadorDetectado = _swig_property(_PuiModule.PUI_Multimodal_idSimpleMarcadorDetectado_get, _PuiModule.PUI_Multimodal_idSimpleMarcadorDetectado_set)
    def __init__(self, *args): 
        this = _PuiModule.new_PUI_Multimodal(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_PUI_Multimodal
    __del__ = lambda self : None;
PUI_Multimodal_swigregister = _PuiModule.PUI_Multimodal_swigregister
PUI_Multimodal_swigregister(PUI_Multimodal)

class Historico(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Historico, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Historico, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tope"] = _PuiModule.Historico_tope_set
    __swig_getmethods__["tope"] = _PuiModule.Historico_tope_get
    if _newclass:tope = _swig_property(_PuiModule.Historico_tope_get, _PuiModule.Historico_tope_set)
    __swig_setmethods__["cantHistorico"] = _PuiModule.Historico_cantHistorico_set
    __swig_getmethods__["cantHistorico"] = _PuiModule.Historico_cantHistorico_get
    if _newclass:cantHistorico = _swig_property(_PuiModule.Historico_cantHistorico_get, _PuiModule.Historico_cantHistorico_set)
    __swig_setmethods__["historicoElementos"] = _PuiModule.Historico_historicoElementos_set
    __swig_getmethods__["historicoElementos"] = _PuiModule.Historico_historicoElementos_get
    if _newclass:historicoElementos = _swig_property(_PuiModule.Historico_historicoElementos_get, _PuiModule.Historico_historicoElementos_set)
    def __init__(self, *args): 
        this = _PuiModule.new_Historico(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_Historico
    __del__ = lambda self : None;
Historico_swigregister = _PuiModule.Historico_swigregister
Historico_swigregister(Historico)

class RangosColorApuntador(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RangosColorApuntador, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RangosColorApuntador, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hmin"] = _PuiModule.RangosColorApuntador_hmin_set
    __swig_getmethods__["hmin"] = _PuiModule.RangosColorApuntador_hmin_get
    if _newclass:hmin = _swig_property(_PuiModule.RangosColorApuntador_hmin_get, _PuiModule.RangosColorApuntador_hmin_set)
    __swig_setmethods__["hmax"] = _PuiModule.RangosColorApuntador_hmax_set
    __swig_getmethods__["hmax"] = _PuiModule.RangosColorApuntador_hmax_get
    if _newclass:hmax = _swig_property(_PuiModule.RangosColorApuntador_hmax_get, _PuiModule.RangosColorApuntador_hmax_set)
    __swig_setmethods__["smin"] = _PuiModule.RangosColorApuntador_smin_set
    __swig_getmethods__["smin"] = _PuiModule.RangosColorApuntador_smin_get
    if _newclass:smin = _swig_property(_PuiModule.RangosColorApuntador_smin_get, _PuiModule.RangosColorApuntador_smin_set)
    __swig_setmethods__["smax"] = _PuiModule.RangosColorApuntador_smax_set
    __swig_getmethods__["smax"] = _PuiModule.RangosColorApuntador_smax_get
    if _newclass:smax = _swig_property(_PuiModule.RangosColorApuntador_smax_get, _PuiModule.RangosColorApuntador_smax_set)
    __swig_setmethods__["vmin"] = _PuiModule.RangosColorApuntador_vmin_set
    __swig_getmethods__["vmin"] = _PuiModule.RangosColorApuntador_vmin_get
    if _newclass:vmin = _swig_property(_PuiModule.RangosColorApuntador_vmin_get, _PuiModule.RangosColorApuntador_vmin_set)
    __swig_setmethods__["vmax"] = _PuiModule.RangosColorApuntador_vmax_set
    __swig_getmethods__["vmax"] = _PuiModule.RangosColorApuntador_vmax_get
    if _newclass:vmax = _swig_property(_PuiModule.RangosColorApuntador_vmax_get, _PuiModule.RangosColorApuntador_vmax_set)
    def __init__(self, *args): 
        this = _PuiModule.new_RangosColorApuntador(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_RangosColorApuntador
    __del__ = lambda self : None;
RangosColorApuntador_swigregister = _PuiModule.RangosColorApuntador_swigregister
RangosColorApuntador_swigregister(RangosColorApuntador)

class ResultadosCalibracion(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ResultadosCalibracion, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ResultadosCalibracion, name)
    __repr__ = _swig_repr
    __swig_setmethods__["areas_minimas"] = _PuiModule.ResultadosCalibracion_areas_minimas_set
    __swig_getmethods__["areas_minimas"] = _PuiModule.ResultadosCalibracion_areas_minimas_get
    if _newclass:areas_minimas = _swig_property(_PuiModule.ResultadosCalibracion_areas_minimas_get, _PuiModule.ResultadosCalibracion_areas_minimas_set)
    __swig_setmethods__["areas_maximas"] = _PuiModule.ResultadosCalibracion_areas_maximas_set
    __swig_getmethods__["areas_maximas"] = _PuiModule.ResultadosCalibracion_areas_maximas_get
    if _newclass:areas_maximas = _swig_property(_PuiModule.ResultadosCalibracion_areas_maximas_get, _PuiModule.ResultadosCalibracion_areas_maximas_set)
    __swig_setmethods__["relaciones_promedio"] = _PuiModule.ResultadosCalibracion_relaciones_promedio_set
    __swig_getmethods__["relaciones_promedio"] = _PuiModule.ResultadosCalibracion_relaciones_promedio_get
    if _newclass:relaciones_promedio = _swig_property(_PuiModule.ResultadosCalibracion_relaciones_promedio_get, _PuiModule.ResultadosCalibracion_relaciones_promedio_set)
    def __init__(self, *args): 
        this = _PuiModule.new_ResultadosCalibracion(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_ResultadosCalibracion
    __del__ = lambda self : None;
ResultadosCalibracion_swigregister = _PuiModule.ResultadosCalibracion_swigregister
ResultadosCalibracion_swigregister(ResultadosCalibracion)

class CoordApuntador(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CoordApuntador, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CoordApuntador, name)
    __repr__ = _swig_repr
    __swig_setmethods__["area"] = _PuiModule.CoordApuntador_area_set
    __swig_getmethods__["area"] = _PuiModule.CoordApuntador_area_get
    if _newclass:area = _swig_property(_PuiModule.CoordApuntador_area_get, _PuiModule.CoordApuntador_area_set)
    __swig_setmethods__["centro"] = _PuiModule.CoordApuntador_centro_set
    __swig_getmethods__["centro"] = _PuiModule.CoordApuntador_centro_get
    if _newclass:centro = _swig_property(_PuiModule.CoordApuntador_centro_get, _PuiModule.CoordApuntador_centro_set)
    def __init__(self, *args): 
        this = _PuiModule.new_CoordApuntador(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_CoordApuntador
    __del__ = lambda self : None;
CoordApuntador_swigregister = _PuiModule.CoordApuntador_swigregister
CoordApuntador_swigregister(CoordApuntador)

FORMA_APUNTADOR_CIRCULO = _PuiModule.FORMA_APUNTADOR_CIRCULO
FORMA_APUNTADOR_RECTANGULAR = _PuiModule.FORMA_APUNTADOR_RECTANGULAR
FORMA_APUNTADOR_MANO = _PuiModule.FORMA_APUNTADOR_MANO
ERROR_DETECTANDO_MARCADORES = _PuiModule.ERROR_DETECTANDO_MARCADORES
ERROR_CALCULANDO_MATRIZ_TRANSFORMACION = _PuiModule.ERROR_CALCULANDO_MATRIZ_TRANSFORMACION
ERROR_NINGUN_MARCADOR_DETECTADO = _PuiModule.ERROR_NINGUN_MARCADOR_DETECTADO
ERROR_IMAGEN_NULL = _PuiModule.ERROR_IMAGEN_NULL
DETECCION_CORRECTA = _PuiModule.DETECCION_CORRECTA
MASCARA_APLICADA = _PuiModule.MASCARA_APLICADA
MASCARA_NO_APLICADA = _PuiModule.MASCARA_NO_APLICADA
TIPO_MASCARA_BINARIA = _PuiModule.TIPO_MASCARA_BINARIA
TIPO_MASCARA_ATENUANTE = _PuiModule.TIPO_MASCARA_ATENUANTE
ERROR_TOMAR_MUESTRA_FORMA_NO_IMPLEMENTADA = _PuiModule.ERROR_TOMAR_MUESTRA_FORMA_NO_IMPLEMENTADA
ERROR_TOMAR_MUESTRA_OK = _PuiModule.ERROR_TOMAR_MUESTRA_OK
OFFSET_ROI = _PuiModule.OFFSET_ROI
MIN_AREA_WIDTH_HEIGHT = _PuiModule.MIN_AREA_WIDTH_HEIGHT
MIN_CF_MARKER_DETECT = _PuiModule.MIN_CF_MARKER_DETECT
MODO_MULTI_MARKERS = _PuiModule.MODO_MULTI_MARKERS
MODO_SIMPLE = _PuiModule.MODO_SIMPLE
MODO_MULTI_MARKERS_CALIBRADOR = _PuiModule.MODO_MULTI_MARKERS_CALIBRADOR
class Pui(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Pui, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Pui, name)
    __repr__ = _swig_repr
    FAST_SPEED_LOOP = _PuiModule.Pui_FAST_SPEED_LOOP
    NORMAL_SPEED_LOOP = _PuiModule.Pui_NORMAL_SPEED_LOOP
    FAST_SPEED_LOOP_MULTIPLIER = _PuiModule.Pui_FAST_SPEED_LOOP_MULTIPLIER
    NORMAL_SPEED_LOOP_MULTIPLIER = _PuiModule.Pui_NORMAL_SPEED_LOOP_MULTIPLIER
    def __init__(self, *args): 
        this = _PuiModule.new_Pui(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _PuiModule.delete_Pui
    __del__ = lambda self : None;
    def leerConfiguracionObjetosPUI(*args): return _PuiModule.Pui_leerConfiguracionObjetosPUI(*args)
    def leerPatternsModoSimple(*args): return _PuiModule.Pui_leerPatternsModoSimple(*args)
    def imprimirPropiedadesObjetosPUI(*args): return _PuiModule.Pui_imprimirPropiedadesObjetosPUI(*args)
    def getNombreObjetoPUI(*args): return _PuiModule.Pui_getNombreObjetoPUI(*args)
    def getSonidoObjetoPUI(*args): return _PuiModule.Pui_getSonidoObjetoPUI(*args)
    def getImagenObjetoPUI(*args): return _PuiModule.Pui_getImagenObjetoPUI(*args)
    def getSonidoError(*args): return _PuiModule.Pui_getSonidoError(*args)
    def getSonidoOk(*args): return _PuiModule.Pui_getSonidoOk(*args)
    def esRelacionCorrecta(*args): return _PuiModule.Pui_esRelacionCorrecta(*args)
    def getConjuntoObjetoPui(*args): return _PuiModule.Pui_getConjuntoObjetoPui(*args)
    def getIdElementoRelacionado(*args): return _PuiModule.Pui_getIdElementoRelacionado(*args)
    def getNombreRelacionObjetoPUI(*args): return _PuiModule.Pui_getNombreRelacionObjetoPUI(*args)
    def detectarSeleccion(*args): return _PuiModule.Pui_detectarSeleccion(*args)
    def initDeteccionApuntador(*args): return _PuiModule.Pui_initDeteccionApuntador(*args)
    def getPropiedadesDeteccionApuntador(*args): return _PuiModule.Pui_getPropiedadesDeteccionApuntador(*args)
    def setPropiedadesDeteccionApuntador(*args): return _PuiModule.Pui_setPropiedadesDeteccionApuntador(*args)
    def getPropiedadesColorApuntador(*args): return _PuiModule.Pui_getPropiedadesColorApuntador(*args)
    def setPropiedadesColorApuntador(*args): return _PuiModule.Pui_setPropiedadesColorApuntador(*args)
    def setHminApuntador(*args): return _PuiModule.Pui_setHminApuntador(*args)
    def getHminApuntador(*args): return _PuiModule.Pui_getHminApuntador(*args)
    def setHmaxApuntador(*args): return _PuiModule.Pui_setHmaxApuntador(*args)
    def getHmaxApuntador(*args): return _PuiModule.Pui_getHmaxApuntador(*args)
    def setSminApuntador(*args): return _PuiModule.Pui_setSminApuntador(*args)
    def getSminApuntador(*args): return _PuiModule.Pui_getSminApuntador(*args)
    def setSmaxApuntador(*args): return _PuiModule.Pui_setSmaxApuntador(*args)
    def getSmaxApuntador(*args): return _PuiModule.Pui_getSmaxApuntador(*args)
    def setVminApuntador(*args): return _PuiModule.Pui_setVminApuntador(*args)
    def getVminApuntador(*args): return _PuiModule.Pui_getVminApuntador(*args)
    def setVmaxApuntador(*args): return _PuiModule.Pui_setVmaxApuntador(*args)
    def getVmaxApuntador(*args): return _PuiModule.Pui_getVmaxApuntador(*args)
    def procesarDatosCalibracion(*args): return _PuiModule.Pui_procesarDatosCalibracion(*args)
    def guardarDatosCalibracion(*args): return _PuiModule.Pui_guardarDatosCalibracion(*args)
    def initPropiedadesCalibracion(*args): return _PuiModule.Pui_initPropiedadesCalibracion(*args)
    def leerConfiguracionCalibracion(*args): return _PuiModule.Pui_leerConfiguracionCalibracion(*args)
    def calibrarThreshold(*args): return _PuiModule.Pui_calibrarThreshold(*args)
    def setBrillo(*args): return _PuiModule.Pui_setBrillo(*args)
    def setAutoWhiteBalance(*args): return _PuiModule.Pui_setAutoWhiteBalance(*args)
    def setAutoGain(*args): return _PuiModule.Pui_setAutoGain(*args)
    def setHorizontalFlip(*args): return _PuiModule.Pui_setHorizontalFlip(*args)
    def abrirVentanaGrafica(*args): return _PuiModule.Pui_abrirVentanaGrafica(*args)
    def cerrarVentanaGrafica(*args): return _PuiModule.Pui_cerrarVentanaGrafica(*args)
    def desplegarImagenAR(*args): return _PuiModule.Pui_desplegarImagenAR(*args)
    def desplegarImagenFromData(*args): return _PuiModule.Pui_desplegarImagenFromData(*args)
    def capNext(*args): return _PuiModule.Pui_capNext(*args)
    def capStart(*args): return _PuiModule.Pui_capStart(*args)
    def capStop(*args): return _PuiModule.Pui_capStop(*args)
    def capClose(*args): return _PuiModule.Pui_capClose(*args)
    def capturarImagenAR(*args): return _PuiModule.Pui_capturarImagenAR(*args)
    def capturarPyImageAR(*args): return _PuiModule.Pui_capturarPyImageAR(*args)
    def obtenerImagenDebugAR(*args): return _PuiModule.Pui_obtenerImagenDebugAR(*args)
    def initPropiedadesCalibracionSoloApuntador(*args): return _PuiModule.Pui_initPropiedadesCalibracionSoloApuntador(*args)
    def aplicarNuevaMascaraCalibrador(*args): return _PuiModule.Pui_aplicarNuevaMascaraCalibrador(*args)
    def aplicarMascaraCalibrador(*args): return _PuiModule.Pui_aplicarMascaraCalibrador(*args)
    def setAchicarRadioMascaraCircular(*args): return _PuiModule.Pui_setAchicarRadioMascaraCircular(*args)
    def getAchicarRadioMascaraCircular(*args): return _PuiModule.Pui_getAchicarRadioMascaraCircular(*args)
    def getCalibrationImage(*args): return _PuiModule.Pui_getCalibrationImage(*args)
    def tomarMuestraApuntador(*args): return _PuiModule.Pui_tomarMuestraApuntador(*args)
    def calcularResultadosCalibracionApuntador(*args): return _PuiModule.Pui_calcularResultadosCalibracionApuntador(*args)
    def guardarSoloRangosColorApuntador(*args): return _PuiModule.Pui_guardarSoloRangosColorApuntador(*args)
    def guardarCalibracionApuntador(*args): return _PuiModule.Pui_guardarCalibracionApuntador(*args)
    def setDebugCalibracion(*args): return _PuiModule.Pui_setDebugCalibracion(*args)
    def isDebugCalibracion(*args): return _PuiModule.Pui_isDebugCalibracion(*args)
    def getResultadosRangosColor(*args): return _PuiModule.Pui_getResultadosRangosColor(*args)
    def detectarYCalcularPosicionTodosMultiMarkers(*args): return _PuiModule.Pui_detectarYCalcularPosicionTodosMultiMarkers(*args)
    def detectarMarcadores(*args): return _PuiModule.Pui_detectarMarcadores(*args)
    def detectarMarcadoresSimple(*args): return _PuiModule.Pui_detectarMarcadoresSimple(*args)
    def getIdMarcadorSimpleDetectado(*args): return _PuiModule.Pui_getIdMarcadorSimpleDetectado(*args)
    def getMarcadorSimpleDetectado(*args): return _PuiModule.Pui_getMarcadorSimpleDetectado(*args)
    def getInfoMultiMarcador(*args): return _PuiModule.Pui_getInfoMultiMarcador(*args)
    def setARCf(*args): return _PuiModule.Pui_setARCf(*args)
    def getARCf(*args): return _PuiModule.Pui_getARCf(*args)
    def getARThreshold(*args): return _PuiModule.Pui_getARThreshold(*args)
    def setARThreshold(*args): return _PuiModule.Pui_setARThreshold(*args)
    def initPuiConCapturaDeVideo(*args): return _PuiModule.Pui_initPuiConCapturaDeVideo(*args)
    def setDebugConImagenes(*args): return _PuiModule.Pui_setDebugConImagenes(*args)
    def getDebugConImagenes(*args): return _PuiModule.Pui_getDebugConImagenes(*args)
    def habilitarHistorico(*args): return _PuiModule.Pui_habilitarHistorico(*args)
    def isHistoricoHabilitado(*args): return _PuiModule.Pui_isHistoricoHabilitado(*args)
    def finish(*args): return _PuiModule.Pui_finish(*args)
    def getFPSAndResetCount(*args): return _PuiModule.Pui_getFPSAndResetCount(*args)
    def getFPS(*args): return _PuiModule.Pui_getFPS(*args)
    def getModuleInfo(*args): return _PuiModule.Pui_getModuleInfo(*args)
    def setDebugMode(*args): return _PuiModule.Pui_setDebugMode(*args)
    def getDebugMode(*args): return _PuiModule.Pui_getDebugMode(*args)
Pui_swigregister = _PuiModule.Pui_swigregister
Pui_swigregister(Pui)



